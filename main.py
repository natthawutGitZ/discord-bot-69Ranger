import discord
from discord.ext import commands
from discord import app_commands
import os
from keep_alive import keep_alive
import asyncio
from datetime import datetime
import pytz

intents = discord.Intents.default()
intents.message_content = True
intents.members = True

bot = commands.Bot(command_prefix='!', intents=intents)
event_data = {}
THAI_TZ = pytz.timezone("Asia/Bangkok")
#=============================================================================================
#‚ö†Ô∏è /event ‡∏™‡∏£‡πâ‡∏≤‡∏á event
class EventJoinView(discord.ui.View):
    def __init__(self, title, event_time):
        super().__init__(timeout=None)
        self.title = title
        self.event_time = event_time

    @discord.ui.button(label="‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°", style=discord.ButtonStyle.green)
    async def join(self, interaction: discord.Interaction, button: discord.ui.Button):
        await self.handle_response(interaction, "going", button)

    @discord.ui.button(label="‚ùî ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏°‡∏≤", style=discord.ButtonStyle.gray)
    async def maybe(self, interaction: discord.Interaction, button: discord.ui.Button):
        await self.handle_response(interaction, "maybe", button)

    @discord.ui.button(label="‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏≤", style=discord.ButtonStyle.red)
    async def decline(self, interaction: discord.Interaction, button: discord.ui.Button):
        await self.handle_response(interaction, "declined", button)

   async def handle_response(self, interaction: discord.Interaction, status: str, button: discord.ui.Button):
        message_id = interaction.message.id
        user_id = interaction.user.id

        if message_id not in event_data:
            await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°", ephemeral=True)
            return

        for s in ["going", "maybe", "declined"]:
            if user_id in event_data[message_id][s]:
                event_data[message_id][s].remove(user_id)

        event_data[message_id][status].append(user_id)

        # ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç embed
        embed = interaction.message.embeds[0]
        embed.set_field_at(4, name="üìã ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°", value=f"üëç ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°: {len(event_data[message_id]['going'])}\n‚ùî ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏°‡∏≤: {len(event_data[message_id]['maybe'])}\n‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏≤: {len(event_data[message_id]['declined'])}", inline=False)
        await interaction.message.edit(embed=embed, view=self)

        await interaction.response.send_message(f"üìå ‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤: {button.label}", ephemeral=True)

@bot.tree.command(name="event", description="‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà")
@app_commands.describe(
    title="‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå",
    editor_info="Editor by / Preset / Mod",
    story="‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à",
    roles="‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö (‡πÄ‡∏ä‡πà‡∏ô Rifleman, Sniper)",
    time="‡πÄ‡∏ß‡∏•‡∏≤ (‡πÄ‡∏ä‡πà‡∏ô 11-04-2025 18:30)",
    channel="‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå",
    image_url="‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)"
)
async def create_event(
    interaction: discord.Interaction,
    title: str,
    editor_info: str,
    story: str,
    roles: str,
    time: str,
    channel: discord.TextChannel,
    image_url: str = None
):
    try:
        event_time = datetime.strptime(time, "%d-%m-%Y %H:%M")
        event_time = THAI_TZ.localize(event_time).astimezone(pytz.utc)
    except ValueError:
        await interaction.response.send_message("‚ùå ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á! ‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: DD-MM-YYYY HH:MM", ephemeral=True)
        return

    embed = discord.Embed(title=title, color=discord.Color.green())
    embed.add_field(name="üõ†Ô∏è Editor / Preset / Mod", value=editor_info, inline=False)
    embed.add_field(name="üìñ Story", value=story, inline=False)
    embed.add_field(name="üé≠ Roles", value=roles, inline=False)
    embed.add_field(name="üïí ‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤", value=event_time.astimezone(THAI_TZ).strftime("%d-%m-%Y %H:%M ‡∏ô."), inline=False)
    embed.add_field(name="üìã ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°", value="üëç ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°: 0\n‚ùî ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏°‡∏≤: 0\n‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏≤: 0", inline=False)

    if image_url:
        embed.set_image(url=image_url)

    view = EventJoinView(title, event_time)
    msg = await channel.send(embed=embed, view=view)

    thread = await msg.create_thread(name=f"üóìÔ∏è {title}", auto_archive_duration=60)
    await thread.send(f"üì¢ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° `{title}` ‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢ <@{interaction.user.id}>")

    event_data[msg.id] = {
        "title": title,
        "event_time": event_time,
        "going": [],
        "maybe": [],
        "declined": [],
        "thread_id": thread.id,
        "message_id": msg.id,
        "channel_id": channel.id
    }

    await interaction.response.send_message("‚úÖ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!", ephemeral=True)
#=============================================================================================
#‚ö†Ô∏è /Help ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
@bot.tree.command(name="help", description="‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó")
async def help_command(interaction: discord.Interaction):
    embed = discord.Embed(
        title="üìú ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó",
        description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ",
        color=discord.Color.blue()
    )
    embed.add_field(name="/ping", value="‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà", inline=False)
    embed.add_field(name="/dm", value="‡∏™‡πà‡∏á DM ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Role (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)", inline=False)
    embed.add_field(name="‡∏ñ‡∏≤‡∏° [‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°]", value="‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏Å‡∏±‡∏ö AI", inline=False)
    embed.set_footer(text="69Ranger Gentleman Community Bot")
    await interaction.response.send_message(embed=embed, ephemeral=True)
#=============================================================================================
#‚ö†Ô∏è /ping ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
@bot.tree.command(name="ping", description="‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó")
async def slash_ping(interaction: discord.Interaction):
    await interaction.response.send_message("‡∏ö‡∏≠‡∏ó‡∏¢‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà üü¢")
#=============================================================================================
#‚ö†Ô∏è /DM ‡∏™‡πà‡∏á ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° DM 
class ConfirmView(discord.ui.View):
    def __init__(self, role, message, members):
        super().__init__(timeout=60)
        self.role = role
        self.message = message
        self.members = members

    @discord.ui.button(label="‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô", style=discord.ButtonStyle.green)
    async def confirm(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.edit_message(content="üì§ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°...", view=None)
        success = 0
        failed = 0
        for member in self.members:
            try:
                await member.send(self.message)
                success += 1
            except:
                failed += 1
            await asyncio.sleep(1)

        await interaction.followup.send(f"‚úÖ ‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {success} ‡∏Ñ‡∏ô\n‚ùå ‡∏™‡πà‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {failed} ‡∏Ñ‡∏ô", ephemeral=True)

    @discord.ui.button(label="‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", style=discord.ButtonStyle.red)
    async def cancel(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.edit_message(content="üö´ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°", view=None)

@bot.tree.command(name="dm", description="‡∏™‡πà‡∏á DM ‡πÉ‡∏´‡πâ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Role (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)")
@app_commands.describe(role="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Role ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ñ‡∏∂‡∏á", message="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á")
async def dm(interaction: discord.Interaction, role: discord.Role, message: str):
    if not interaction.user.guild_permissions.administrator:
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)", ephemeral=True)
        return

    members = [m for m in role.members if not m.bot]
    if not members:
        await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô Role ‡∏ô‡∏µ‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á DM ‡πÑ‡∏î‡πâ", ephemeral=True)
        return

    view = ConfirmView(role, message, members)
    await interaction.response.send_message(
        f"‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö `{len(members)}` ‡∏Ñ‡∏ô‡πÉ‡∏ô Role `{role.name}` ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?\n\nüì® ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°:\n```{message}```",
        view=view,
        ephemeral=True
    )
#=============================================================================================
#‚ö†Ô∏è auto Role  
@bot.event
async def on_member_join(member):
    try:
        role = discord.utils.get(member.guild.roles, name="Civilian")
        if role:
            await member.add_roles(role)
            print(f"‚úÖ ‡πÉ‡∏´‡πâ Role '{role.name}' ‡∏Å‡∏±‡∏ö {member.name} ‡πÅ‡∏•‡πâ‡∏ß")
        else:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Role 'Civilian'")
#=============================================================================================
#‚ö†Ô∏è welcome_message DM
        welcome_message = (
            "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ! ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤!\n"
            "‡πÄ‡∏£‡∏≤‡∏´‡∏ß‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡∏∏‡∏Å‡∏™‡∏ô‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà :)\n"
            "‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà <#1281566308097462335>\n"
            "‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏° ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏£‡∏≠‡∏Å‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà <#1349726875030913085>"
        )
        await member.send(welcome_message)
        print(f"‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á {member.name}'s DM")
    except discord.Forbidden:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡πâ {member.name} ‡πÑ‡∏î‡πâ")

#=============================================================================================
#‚ö†Ô∏è status Arma 3 | 69RangerGTMCommunit
@bot.event
async def on_ready():
    await bot.tree.sync()
    print(f'‚úÖ Logged in as {bot.user}')
    await bot.change_presence(status=discord.Status.online, activity=discord.Game(name="Arma 3 | 69RangerGTMCommunit"))
    try:
        synced = await bot.tree.sync()
        print(f"‚úÖ Synced {len(synced)} global command(s).")
    except Exception as e:
        print(f"‚ùå Sync failed: {e}")
    for cmd in bot.tree.get_commands():
        print(f"üìå Synced command: /{cmd.name}")
#=============================================================================================
keep_alive()
bot.run(os.getenv("DISCORD_TOKEN"))
